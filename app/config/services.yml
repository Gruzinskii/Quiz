# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    mailer_params:
      email_confirm_template: "mailer/mail_confirm.html.twig"
      resetting_confirm_template: "mailer/mail_resetting.html.twig"
    user_grid:
      translation_domain: "translations"
      table_fields:
        id: "admin.user_manager.id"
        username: "admin.user_manager.user_name"
        email: "admin.user_manager.email"
        role: "admin.user_manager.role"
        confirmationToken: "admin.user_manager.confirmation_token"
        enabled: "admin.user_manager.status"
        resettingToken: "admin.user_manager.resetting_token"
      sortable_fields: ["id","username","email","role","confirmationToken","enabled", "resettingToken"]
      filterable_fields: ["id","username","email","role","confirmationToken","enabled","resettingToken"]
      button_field:
        condition: true
        field: "enabled"
        true_condition:
          class_name: "btn btn-outline-danger button-size btn-block"
          label: "admin.user_manager.block"
        false_condition:
          class_name: "btn btn-outline-success button-size btn-unblock"
          label: "admin.user_manager.unblock"

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app.tokens.action_listener:
        class: AppBundle\EventListener\RedirectUserListener
        tags:
          - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    twig_mailer:
      class: AppBundle\Service\Mailer\TwigMailer
      arguments: ["@mailer","@router","@twig", "%mailer_user%","%mailer_params%"]
      public: true
    question_manager:
      class: AppBundle\Service\Question\QuestionManager
      public: true
    registration_handler:
      class: AppBundle\Service\RegistrationHandler\RegistrationHandler
      public: true
    quiz_handler:
      class: AppBundle\Service\QuizHandler\QuizHandler
      public: true
    wired_question_manager:
      class: AppBundle\Service\WiredQuestion\WiredQuestionManager
      public: true
    quiz_manager:
      class: AppBundle\Service\Quiz\QuizManager
      public: true
    answer_manager:
      class: AppBundle\Service\Answer\AnswerManager
      public: true
    grid_loader:
      class: AppBundle\Service\Grid\GridLoader
      public: true

    AppBundle\Service\StartedQuiz\StartedQuizManager: ~

    AppBundle\Service\CompletedQuiz\CompletedQuizManager: ~

    AppBundle\Service\UserAnswer\UserAnswerManager: ~

    AppBundle\Service\CompletedQuiz\CompletedQuizManagerInterface: '@AppBundle\Service\CompletedQuiz\CompletedQuizManager'
    AppBundle\Service\StartedQuiz\StartedQuizManagerInterface: '@AppBundle\Service\StartedQuiz\StartedQuizManager'
    AppBundle\Service\UserAnswer\UserAnswerManagerInterface: '@AppBundle\Service\UserAnswer\UserAnswerManager'

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
